<?php

/**
 * @file
 * Contains clutch.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_help().
 */
function clutch_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the clutch module.
    case 'help.page.clutch':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Poetic Systems awesome website conversion module.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_install().
 */
function clutch_install() {
  $bundle = entity_create('component_type', array(
    'id' => 'component_view_reference',
    'label' => 'Component View Reference',
    'revision' => FALSE,
  ));
  $bundle->save();

  $field_storage = FieldStorageConfig::create([
    'field_name' => 'component_view',
    'entity_type' => 'component',
    'type' => 'entity_reference',
    'cardinality' => 1,
    'custom_storage' => FALSE,
    'settings' => array(
      'target_type' => 'view',
    ),
  ]);
  $field_storage->save();

  $field_instance = FieldConfig::create([
    'field_storage' => $field_storage,
    'bundle' => 'component_view_reference',
    'label' => 'Component View',
  ]);

  $field_instance->save();

  // Assign widget settings for the 'default' form mode.
  //entity_get_form_display('component', 'component_view_reference', 'default')
    //->setComponent('component_view', array(
      //'type' => 'options_select',
    //))
    //->save();

  // Assign display settings for 'default' view mode.
  //entity_get_display('component', 'component_view_reference', 'default')
    //->setComponent('component_view', array(
      //'label' => 'hidden',
      //'type' => 'entity_reference_entity_id',
    //))
    //->save();
}
