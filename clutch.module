<?php

/**
 * @file
 * Contains clutch.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_help().
 */
function clutch_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the clutch module.
    case 'help.page.clutch':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Poetic Systems awesome website conversion module.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_install().
 */
function clutch_install() {
  // create a bundle called component_view_reference. we need to use this
  // bundle to create a reference to view and attach to page like a regular
  // component.
  $bundle = entity_create('component_type', array(
    'id' => 'component_view_reference',
    'label' => 'Component View Reference',
    'revision' => FALSE,
  ));
  $bundle->save();
  // TODO: need to automate creating field and attach to
  // component_view_reference
  // attach component_view_reference to associated_components field.
  $field_associated_components = FieldConfig::loadByName('custom_page', 'custom_page', 'associated_components');
  $handler_settings = $field_associated_components->getSetting('handler_settings');
  $handler_settings['target_bundles']['component_view_reference'] = 'component_view_reference';
  $field_associated_components->setSetting('handler_settings', $handler_settings);
  $field_associated_components->save();
}
